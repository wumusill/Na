# 정렬 알고리즘의 3가지 유형
# 1. 정렬 라이브러리로 풀 수 있는 문제
#   : 기본 정렬 라이브러리의 사용 방법을 숙지하고 있으면 어렵지 않게 풀 수 있음
# 2. 정렬 알고리즘의 원리에 대해서 물어보는 문제
#   : 선택, 삽입, 퀵 정렬 등의 원리를 알고 있으야 문제를 풀 수 있음
# 3. 더 빠른 정렬이 필요한 문제
#   : 퀵 정렬 기반의 기법으로는 풀 수 없으며 계수 정렬 등의 다른 정렬 알고리즘을 이용거나
#     기존에 알려진 알고리즘의 구조적인 개선을 거쳐야 풀 수 있음

# 가장 작은 데이터를 선택해 맨 앞에 있는 데이터와 바꾸고
# 그 다음 작은 데이터를 선택해 앞에서 두 번째 데이터와 바꾸는 과정 반복

array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]

for i in range(len(array)):
    min_index = i
    for j in range(i+1, len(array)):
        if array[min_index] > array[j]:
            min_index = j
    array[i], array[min_index] = array[min_index], array[i]

print(array)

# 선택 정렬의 시간 복잡도
# O(N^2)

# 기본 정렬 라이브러리를 포함 다른 알고리즘과 비교했을 때 매우 비효율적
# 다만, 특정한 리스트에서 가장 작은 데이터를 찾는 일이 코딩 테스트에서 잦음
# 그러므로 선택 정렬 소스코드 형태에 익숙해질 필요가 있다