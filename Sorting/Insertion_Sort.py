# 선택 정렬에 비해 실행 시간 측면에서 더 효율적인 알고리즘
# 필요할 때만 위치를 바꾸므로 '데이터가 거의 정렬 되어 있을 때' 훨씬 효율적

array = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8]

for i in range(1, len(array)):
    for j in range(i, 0, -1):
        if array[j] < array[j-1]:
            array[j], array[j-1] = array[j-1], array[j]
        else:   # 자기보다 작은 데이터를 만나면 그 위치에서 멈춤
            break

print(array)

# 삽입 정렬의 시간복잡도 : O(N^2)
# 현재 리스트의 데이터가 거의 정렬되어 있는 상태라면 매우 빠르게 동작
# 최선의 경우 O(N)
# 거의 정렬되어 있는 상태로 입력이 주어지는 문제라면 퀵 정렬 등 여타 정렬 알고리즘을
# 이용하는 것보다 삽입 정렬을 이용하는 것이 정답 확률을 높일 수 있다